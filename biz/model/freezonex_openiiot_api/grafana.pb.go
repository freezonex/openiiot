// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: freezonex/openiiot_api/grafana.proto

package freezonex_openiiot_api

import (
	_ "freezonex/openiiot/biz/model/api"
	"freezonex/openiiot/biz/model/base_resp"
	_ "freezonex/openiiot/biz/model/biz/model/base_req"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id" form:"id" query:"id"`
	Uid             string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid" form:"uid" query:"uid"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name" query:"name"`
	Type            string `protobuf:"bytes,4,opt,name=type,proto3" json:"type" form:"type" query:"type"`
	TypeLogoUrl     string `protobuf:"bytes,5,opt,name=typeLogoUrl,proto3" json:"typeLogoUrl" form:"typeLogoUrl" query:"typeLogoUrl"`
	Url             string `protobuf:"bytes,6,opt,name=url,proto3" json:"url" form:"url" query:"url"`
	Access          string `protobuf:"bytes,7,opt,name=access,proto3" json:"access" form:"access" query:"access"`
	ReadOnly        bool   `protobuf:"varint,8,opt,name=readOnly,proto3" json:"readOnly" form:"readOnly" query:"readOnly"`
	Database        string `protobuf:"bytes,9,opt,name=database,proto3" json:"database" form:"database" query:"database"`
	User            string `protobuf:"bytes,10,opt,name=user,proto3" json:"user" form:"user" query:"user"`
	OrgId           int64  `protobuf:"varint,11,opt,name=orgId,proto3" json:"orgId" form:"orgId" query:"orgId"`
	IsDefault       bool   `protobuf:"varint,12,opt,name=isDefault,proto3" json:"isDefault" form:"isDefault" query:"isDefault"`
	BasicAuth       bool   `protobuf:"varint,13,opt,name=basicAuth,proto3" json:"basicAuth" form:"basicAuth" query:"basicAuth"`
	BasicAuthUser   string `protobuf:"bytes,14,opt,name=basicAuthUser,proto3" json:"basicAuthUser" form:"basicAuthUser" query:"basicAuthUser"`
	WithCredentials bool   `protobuf:"varint,15,opt,name=withCredentials,proto3" json:"withCredentials" form:"withCredentials" query:"withCredentials"`
	// JSONData and SecureJSONData can be represented as string in key-value format
	// or you can define a more complex structure if needed
	JsonData       string `protobuf:"bytes,16,opt,name=jsonData,proto3" json:"jsonData" form:"jsonData" query:"jsonData"`
	SecureJsonData string `protobuf:"bytes,17,opt,name=secureJsonData,proto3" json:"secureJsonData" form:"secureJsonData" query:"secureJsonData"`
	Version        int32  `protobuf:"varint,18,opt,name=version,proto3" json:"version" form:"version" query:"version"`
}

func (x *DataSource) Reset() {
	*x = DataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSource) ProtoMessage() {}

func (x *DataSource) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSource.ProtoReflect.Descriptor instead.
func (*DataSource) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{0}
}

func (x *DataSource) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DataSource) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DataSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataSource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataSource) GetTypeLogoUrl() string {
	if x != nil {
		return x.TypeLogoUrl
	}
	return ""
}

func (x *DataSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DataSource) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *DataSource) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *DataSource) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DataSource) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DataSource) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *DataSource) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *DataSource) GetBasicAuth() bool {
	if x != nil {
		return x.BasicAuth
	}
	return false
}

func (x *DataSource) GetBasicAuthUser() string {
	if x != nil {
		return x.BasicAuthUser
	}
	return ""
}

func (x *DataSource) GetWithCredentials() bool {
	if x != nil {
		return x.WithCredentials
	}
	return false
}

func (x *DataSource) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *DataSource) GetSecureJsonData() string {
	if x != nil {
		return x.SecureJsonData
	}
	return ""
}

func (x *DataSource) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GrafanaDSN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host" form:"host" query:"host"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username" form:"username" query:"username"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password" form:"password" query:"password"`
}

func (x *GrafanaDSN) Reset() {
	*x = GrafanaDSN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaDSN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaDSN) ProtoMessage() {}

func (x *GrafanaDSN) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaDSN.ProtoReflect.Descriptor instead.
func (*GrafanaDSN) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{1}
}

func (x *GrafanaDSN) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GrafanaDSN) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GrafanaDSN) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type DashboardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsStarred bool   `protobuf:"varint,1,opt,name=isStarred,proto3" json:"isStarred" form:"isStarred" query:"isStarred"`
	Slug      string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug" form:"slug" query:"slug"`
	FolderId  int64  `protobuf:"varint,3,opt,name=folderId,proto3" json:"folderId" form:"folderId" query:"folderId"`
	FolderUid string `protobuf:"bytes,4,opt,name=folderUid,proto3" json:"folderUid" form:"folderUid" query:"folderUid"`
	Url       string `protobuf:"bytes,5,opt,name=url,proto3" json:"url" form:"url" query:"url"`
}

func (x *DashboardMeta) Reset() {
	*x = DashboardMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardMeta) ProtoMessage() {}

func (x *DashboardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardMeta.ProtoReflect.Descriptor instead.
func (*DashboardMeta) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{2}
}

func (x *DashboardMeta) GetIsStarred() bool {
	if x != nil {
		return x.IsStarred
	}
	return false
}

func (x *DashboardMeta) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *DashboardMeta) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *DashboardMeta) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

func (x *DashboardMeta) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Dashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// we use a string to represent the serialized JSON structure.
	Model     string         `protobuf:"bytes,1,opt,name=model,proto3" json:"model" form:"model" query:"model"`
	FolderId  int64          `protobuf:"varint,2,opt,name=folderId,proto3" json:"folderId" form:"folderId" query:"folderId"`
	Meta      *DashboardMeta `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta" form:"meta" query:"meta"`
	Overwrite bool           `protobuf:"varint,4,opt,name=overwrite,proto3" json:"overwrite" form:"overwrite" query:"overwrite"`
	Message   string         `protobuf:"bytes,5,opt,name=message,proto3" json:"message" form:"message" query:"message"`
	FolderUid string         `protobuf:"bytes,6,opt,name=folderUid,proto3" json:"folderUid" form:"folderUid" query:"folderUid"`
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{3}
}

func (x *Dashboard) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Dashboard) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *Dashboard) GetMeta() *DashboardMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Dashboard) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

func (x *Dashboard) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Dashboard) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

type DashboardSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug    string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug" form:"slug" query:"slug"`
	Id      int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id" form:"id" query:"id"`
	Uid     string `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid" form:"uid" query:"uid"`
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status" form:"status" query:"status"`
	Version int64  `protobuf:"varint,5,opt,name=version,proto3" json:"version" form:"version" query:"version"`
}

func (x *DashboardSaveResponse) Reset() {
	*x = DashboardSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardSaveResponse) ProtoMessage() {}

func (x *DashboardSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardSaveResponse.ProtoReflect.Descriptor instead.
func (*DashboardSaveResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{4}
}

func (x *DashboardSaveResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *DashboardSaveResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DashboardSaveResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DashboardSaveResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DashboardSaveResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GrafanaAuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedirectUri string `protobuf:"bytes,1,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri" query:"redirect_uri"`
	State       string `protobuf:"bytes,2,opt,name=state,proto3" json:"state" query:"state"`
}

func (x *GrafanaAuthorizeRequest) Reset() {
	*x = GrafanaAuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaAuthorizeRequest) ProtoMessage() {}

func (x *GrafanaAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*GrafanaAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{5}
}

func (x *GrafanaAuthorizeRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *GrafanaAuthorizeRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type GrafanaAuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
}

func (x *GrafanaAuthorizeResponse) Reset() {
	*x = GrafanaAuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaAuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaAuthorizeResponse) ProtoMessage() {}

func (x *GrafanaAuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaAuthorizeResponse.ProtoReflect.Descriptor instead.
func (*GrafanaAuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{6}
}

func (x *GrafanaAuthorizeResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GrafanaAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code" form:"code" query:"code"`
	GrantType   string `protobuf:"bytes,2,opt,name=grant_type,json=grantType,proto3" json:"grant_type" form:"grant_type" query:"grant_type"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri" form:"redirect_uri" query:"redirect_uri"`
}

func (x *GrafanaAccessTokenRequest) Reset() {
	*x = GrafanaAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaAccessTokenRequest) ProtoMessage() {}

func (x *GrafanaAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*GrafanaAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{7}
}

func (x *GrafanaAccessTokenRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GrafanaAccessTokenRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *GrafanaAccessTokenRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

type GrafanaAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp     *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
	AccessToken  string                  `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token" form:"access_token" query:"access_token"`
	TokenType    string                  `protobuf:"bytes,3,opt,name=token_type,json=tokenType,proto3" json:"token_type" form:"token_type" query:"token_type"`
	ExpiresIn    int32                   `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in" form:"expires_in" query:"expires_in"`
	RefreshToken string                  `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token" form:"refresh_token" query:"refresh_token"`
}

func (x *GrafanaAccessTokenResponse) Reset() {
	*x = GrafanaAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaAccessTokenResponse) ProtoMessage() {}

func (x *GrafanaAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*GrafanaAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{8}
}

func (x *GrafanaAccessTokenResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GrafanaAccessTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GrafanaAccessTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *GrafanaAccessTokenResponse) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *GrafanaAccessTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type GrafanaUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization string `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization" header:"Authorization"`
}

func (x *GrafanaUserRequest) Reset() {
	*x = GrafanaUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaUserRequest) ProtoMessage() {}

func (x *GrafanaUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaUserRequest.ProtoReflect.Descriptor instead.
func (*GrafanaUserRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{9}
}

func (x *GrafanaUserRequest) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

type GrafanaUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
	Sub      string                  `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub" form:"sub" query:"sub"`
	Email    string                  `protobuf:"bytes,3,opt,name=email,proto3" json:"email" form:"email" query:"email"`
	Name     string                  `protobuf:"bytes,4,opt,name=name,proto3" json:"name" form:"name" query:"name"`
	Role     []string                `protobuf:"bytes,5,rep,name=role,proto3" json:"role" form:"role" query:"role"`
}

func (x *GrafanaUserResponse) Reset() {
	*x = GrafanaUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaUserResponse) ProtoMessage() {}

func (x *GrafanaUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaUserResponse.ProtoReflect.Descriptor instead.
func (*GrafanaUserResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{10}
}

func (x *GrafanaUserResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GrafanaUserResponse) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *GrafanaUserResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GrafanaUserResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrafanaUserResponse) GetRole() []string {
	if x != nil {
		return x.Role
	}
	return nil
}

type GrafanaGetDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn *GrafanaDSN `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn" form:"dsn" query:"dsn"`
}

func (x *GrafanaGetDataSourceRequest) Reset() {
	*x = GrafanaGetDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaGetDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaGetDataSourceRequest) ProtoMessage() {}

func (x *GrafanaGetDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaGetDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GrafanaGetDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{11}
}

func (x *GrafanaGetDataSourceRequest) GetDsn() *GrafanaDSN {
	if x != nil {
		return x.Dsn
	}
	return nil
}

type GrafanaGetDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp    *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
	DataSources []*DataSource           `protobuf:"bytes,2,rep,name=dataSources,proto3" json:"dataSources" form:"dataSources" query:"dataSources"`
}

func (x *GrafanaGetDataSourceResponse) Reset() {
	*x = GrafanaGetDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaGetDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaGetDataSourceResponse) ProtoMessage() {}

func (x *GrafanaGetDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaGetDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GrafanaGetDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{12}
}

func (x *GrafanaGetDataSourceResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GrafanaGetDataSourceResponse) GetDataSources() []*DataSource {
	if x != nil {
		return x.DataSources
	}
	return nil
}

type GrafanaCreateDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn        *GrafanaDSN `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn" form:"dsn" query:"dsn"`
	DataSource *DataSource `protobuf:"bytes,2,opt,name=dataSource,proto3" json:"dataSource" form:"dataSource" query:"dataSource"`
}

func (x *GrafanaCreateDataSourceRequest) Reset() {
	*x = GrafanaCreateDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaCreateDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaCreateDataSourceRequest) ProtoMessage() {}

func (x *GrafanaCreateDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaCreateDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GrafanaCreateDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{13}
}

func (x *GrafanaCreateDataSourceRequest) GetDsn() *GrafanaDSN {
	if x != nil {
		return x.Dsn
	}
	return nil
}

func (x *GrafanaCreateDataSourceRequest) GetDataSource() *DataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

type GrafanaCreateDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
	Message  string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message" form:"message" query:"message"`
}

func (x *GrafanaCreateDataSourceResponse) Reset() {
	*x = GrafanaCreateDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaCreateDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaCreateDataSourceResponse) ProtoMessage() {}

func (x *GrafanaCreateDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaCreateDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GrafanaCreateDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{14}
}

func (x *GrafanaCreateDataSourceResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GrafanaCreateDataSourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GrafanaDeleteDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn  *GrafanaDSN `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn" form:"dsn" query:"dsn"`
	Name string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name" query:"name"`
}

func (x *GrafanaDeleteDataSourceRequest) Reset() {
	*x = GrafanaDeleteDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaDeleteDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaDeleteDataSourceRequest) ProtoMessage() {}

func (x *GrafanaDeleteDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaDeleteDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GrafanaDeleteDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{15}
}

func (x *GrafanaDeleteDataSourceRequest) GetDsn() *GrafanaDSN {
	if x != nil {
		return x.Dsn
	}
	return nil
}

func (x *GrafanaDeleteDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GrafanaDeleteDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
	Message  string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message" form:"message" query:"message"`
}

func (x *GrafanaDeleteDataSourceResponse) Reset() {
	*x = GrafanaDeleteDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaDeleteDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaDeleteDataSourceResponse) ProtoMessage() {}

func (x *GrafanaDeleteDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaDeleteDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GrafanaDeleteDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{16}
}

func (x *GrafanaDeleteDataSourceResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GrafanaDeleteDataSourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GrafanaCreateDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn       *GrafanaDSN `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn" form:"dsn" query:"dsn"`
	Dashboard *Dashboard  `protobuf:"bytes,2,opt,name=dashboard,proto3" json:"dashboard" form:"dashboard" query:"dashboard"`
}

func (x *GrafanaCreateDashboardRequest) Reset() {
	*x = GrafanaCreateDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaCreateDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaCreateDashboardRequest) ProtoMessage() {}

func (x *GrafanaCreateDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaCreateDashboardRequest.ProtoReflect.Descriptor instead.
func (*GrafanaCreateDashboardRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{17}
}

func (x *GrafanaCreateDashboardRequest) GetDsn() *GrafanaDSN {
	if x != nil {
		return x.Dsn
	}
	return nil
}

func (x *GrafanaCreateDashboardRequest) GetDashboard() *Dashboard {
	if x != nil {
		return x.Dashboard
	}
	return nil
}

type GrafanaCreateDashboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp     *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
	SaveResponse *DashboardSaveResponse  `protobuf:"bytes,2,opt,name=saveResponse,proto3" json:"saveResponse" form:"saveResponse" query:"saveResponse"`
}

func (x *GrafanaCreateDashboardResponse) Reset() {
	*x = GrafanaCreateDashboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaCreateDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaCreateDashboardResponse) ProtoMessage() {}

func (x *GrafanaCreateDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaCreateDashboardResponse.ProtoReflect.Descriptor instead.
func (*GrafanaCreateDashboardResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{18}
}

func (x *GrafanaCreateDashboardResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GrafanaCreateDashboardResponse) GetSaveResponse() *DashboardSaveResponse {
	if x != nil {
		return x.SaveResponse
	}
	return nil
}

type GrafanaSaveDashboardByUidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn      *GrafanaDSN `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn" form:"dsn" query:"dsn"`
	Uid      string      `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid" form:"uid" query:"uid"`
	SavePath string      `protobuf:"bytes,3,opt,name=savePath,proto3" json:"savePath" form:"savePath" query:"savePath"`
}

func (x *GrafanaSaveDashboardByUidRequest) Reset() {
	*x = GrafanaSaveDashboardByUidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaSaveDashboardByUidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaSaveDashboardByUidRequest) ProtoMessage() {}

func (x *GrafanaSaveDashboardByUidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaSaveDashboardByUidRequest.ProtoReflect.Descriptor instead.
func (*GrafanaSaveDashboardByUidRequest) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{19}
}

func (x *GrafanaSaveDashboardByUidRequest) GetDsn() *GrafanaDSN {
	if x != nil {
		return x.Dsn
	}
	return nil
}

func (x *GrafanaSaveDashboardByUidRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GrafanaSaveDashboardByUidRequest) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

type GrafanaSaveDashboardByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base_resp.BaseResponse `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp" form:"base_resp" query:"base_resp"`
	Message  string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message" form:"message" query:"message"`
}

func (x *GrafanaSaveDashboardByUidResponse) Reset() {
	*x = GrafanaSaveDashboardByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaSaveDashboardByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaSaveDashboardByUidResponse) ProtoMessage() {}

func (x *GrafanaSaveDashboardByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freezonex_openiiot_api_grafana_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaSaveDashboardByUidResponse.ProtoReflect.Descriptor instead.
func (*GrafanaSaveDashboardByUidResponse) Descriptor() ([]byte, []int) {
	return file_freezonex_openiiot_api_grafana_proto_rawDescGZIP(), []int{20}
}

func (x *GrafanaSaveDashboardByUidResponse) GetBaseResp() *base_resp.BaseResponse {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GrafanaSaveDashboardByUidResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_freezonex_openiiot_api_grafana_proto protoreflect.FileDescriptor

var file_freezonex_openiiot_api_grafana_proto_rawDesc = []byte{
	0x0a, 0x24, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1a,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x03,
	0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x6f,
	0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x79, 0x70,
	0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x77, 0x69, 0x74, 0x68, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4a, 0x73, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x58,
	0x0a, 0x0a, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x44, 0x53, 0x4e, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xce, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x15, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x17, 0x47, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xb2, 0xbb, 0x18,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x52, 0x0b, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xb2, 0xbb, 0x18, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x50, 0x0a, 0x18, 0x47,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x71, 0x0a,
	0x19, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69,
	0x22, 0xd8, 0x01, 0x0a, 0x1a, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4d, 0x0a, 0x12, 0x47,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xbb, 0x18, 0x0d, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x47,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x53, 0x0a, 0x1b, 0x47, 0x72, 0x61, 0x66,
	0x61, 0x6e, 0x61, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x44, 0x53, 0x4e, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x22, 0x9a, 0x01,
	0x0a, 0x1c, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x1e, 0x47,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x44, 0x53, 0x4e, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x71, 0x0a, 0x1f, 0x47, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x1e, 0x47, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x03,
	0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x44, 0x53, 0x4e, 0x52, 0x03, 0x64,
	0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x1f, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e,
	0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x47, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64,
	0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x44, 0x53, 0x4e, 0x52, 0x03, 0x64, 0x73,
	0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x09, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x1e, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0c, 0x73,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x86,
	0x01, 0x0a, 0x20, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e,
	0x61, 0x44, 0x53, 0x4e, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x61, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x61, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x73, 0x0a, 0x21, 0x47, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x35, 0x5a, 0x33,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69,
	0x6f, 0x74, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x69, 0x6f, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_freezonex_openiiot_api_grafana_proto_rawDescOnce sync.Once
	file_freezonex_openiiot_api_grafana_proto_rawDescData = file_freezonex_openiiot_api_grafana_proto_rawDesc
)

func file_freezonex_openiiot_api_grafana_proto_rawDescGZIP() []byte {
	file_freezonex_openiiot_api_grafana_proto_rawDescOnce.Do(func() {
		file_freezonex_openiiot_api_grafana_proto_rawDescData = protoimpl.X.CompressGZIP(file_freezonex_openiiot_api_grafana_proto_rawDescData)
	})
	return file_freezonex_openiiot_api_grafana_proto_rawDescData
}

var file_freezonex_openiiot_api_grafana_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_freezonex_openiiot_api_grafana_proto_goTypes = []interface{}{
	(*DataSource)(nil),                        // 0: freezonex.openiiot_api.DataSource
	(*GrafanaDSN)(nil),                        // 1: freezonex.openiiot_api.GrafanaDSN
	(*DashboardMeta)(nil),                     // 2: freezonex.openiiot_api.DashboardMeta
	(*Dashboard)(nil),                         // 3: freezonex.openiiot_api.Dashboard
	(*DashboardSaveResponse)(nil),             // 4: freezonex.openiiot_api.DashboardSaveResponse
	(*GrafanaAuthorizeRequest)(nil),           // 5: freezonex.openiiot_api.GrafanaAuthorizeRequest
	(*GrafanaAuthorizeResponse)(nil),          // 6: freezonex.openiiot_api.GrafanaAuthorizeResponse
	(*GrafanaAccessTokenRequest)(nil),         // 7: freezonex.openiiot_api.GrafanaAccessTokenRequest
	(*GrafanaAccessTokenResponse)(nil),        // 8: freezonex.openiiot_api.GrafanaAccessTokenResponse
	(*GrafanaUserRequest)(nil),                // 9: freezonex.openiiot_api.GrafanaUserRequest
	(*GrafanaUserResponse)(nil),               // 10: freezonex.openiiot_api.GrafanaUserResponse
	(*GrafanaGetDataSourceRequest)(nil),       // 11: freezonex.openiiot_api.GrafanaGetDataSourceRequest
	(*GrafanaGetDataSourceResponse)(nil),      // 12: freezonex.openiiot_api.GrafanaGetDataSourceResponse
	(*GrafanaCreateDataSourceRequest)(nil),    // 13: freezonex.openiiot_api.GrafanaCreateDataSourceRequest
	(*GrafanaCreateDataSourceResponse)(nil),   // 14: freezonex.openiiot_api.GrafanaCreateDataSourceResponse
	(*GrafanaDeleteDataSourceRequest)(nil),    // 15: freezonex.openiiot_api.GrafanaDeleteDataSourceRequest
	(*GrafanaDeleteDataSourceResponse)(nil),   // 16: freezonex.openiiot_api.GrafanaDeleteDataSourceResponse
	(*GrafanaCreateDashboardRequest)(nil),     // 17: freezonex.openiiot_api.GrafanaCreateDashboardRequest
	(*GrafanaCreateDashboardResponse)(nil),    // 18: freezonex.openiiot_api.GrafanaCreateDashboardResponse
	(*GrafanaSaveDashboardByUidRequest)(nil),  // 19: freezonex.openiiot_api.GrafanaSaveDashboardByUidRequest
	(*GrafanaSaveDashboardByUidResponse)(nil), // 20: freezonex.openiiot_api.GrafanaSaveDashboardByUidResponse
	(*base_resp.BaseResponse)(nil),            // 21: base_resp.BaseResponse
}
var file_freezonex_openiiot_api_grafana_proto_depIdxs = []int32{
	2,  // 0: freezonex.openiiot_api.Dashboard.meta:type_name -> freezonex.openiiot_api.DashboardMeta
	21, // 1: freezonex.openiiot_api.GrafanaAuthorizeResponse.base_resp:type_name -> base_resp.BaseResponse
	21, // 2: freezonex.openiiot_api.GrafanaAccessTokenResponse.base_resp:type_name -> base_resp.BaseResponse
	21, // 3: freezonex.openiiot_api.GrafanaUserResponse.base_resp:type_name -> base_resp.BaseResponse
	1,  // 4: freezonex.openiiot_api.GrafanaGetDataSourceRequest.dsn:type_name -> freezonex.openiiot_api.GrafanaDSN
	21, // 5: freezonex.openiiot_api.GrafanaGetDataSourceResponse.base_resp:type_name -> base_resp.BaseResponse
	0,  // 6: freezonex.openiiot_api.GrafanaGetDataSourceResponse.dataSources:type_name -> freezonex.openiiot_api.DataSource
	1,  // 7: freezonex.openiiot_api.GrafanaCreateDataSourceRequest.dsn:type_name -> freezonex.openiiot_api.GrafanaDSN
	0,  // 8: freezonex.openiiot_api.GrafanaCreateDataSourceRequest.dataSource:type_name -> freezonex.openiiot_api.DataSource
	21, // 9: freezonex.openiiot_api.GrafanaCreateDataSourceResponse.base_resp:type_name -> base_resp.BaseResponse
	1,  // 10: freezonex.openiiot_api.GrafanaDeleteDataSourceRequest.dsn:type_name -> freezonex.openiiot_api.GrafanaDSN
	21, // 11: freezonex.openiiot_api.GrafanaDeleteDataSourceResponse.base_resp:type_name -> base_resp.BaseResponse
	1,  // 12: freezonex.openiiot_api.GrafanaCreateDashboardRequest.dsn:type_name -> freezonex.openiiot_api.GrafanaDSN
	3,  // 13: freezonex.openiiot_api.GrafanaCreateDashboardRequest.dashboard:type_name -> freezonex.openiiot_api.Dashboard
	21, // 14: freezonex.openiiot_api.GrafanaCreateDashboardResponse.base_resp:type_name -> base_resp.BaseResponse
	4,  // 15: freezonex.openiiot_api.GrafanaCreateDashboardResponse.saveResponse:type_name -> freezonex.openiiot_api.DashboardSaveResponse
	1,  // 16: freezonex.openiiot_api.GrafanaSaveDashboardByUidRequest.dsn:type_name -> freezonex.openiiot_api.GrafanaDSN
	21, // 17: freezonex.openiiot_api.GrafanaSaveDashboardByUidResponse.base_resp:type_name -> base_resp.BaseResponse
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_freezonex_openiiot_api_grafana_proto_init() }
func file_freezonex_openiiot_api_grafana_proto_init() {
	if File_freezonex_openiiot_api_grafana_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_freezonex_openiiot_api_grafana_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaDSN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaAuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaAuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaGetDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaGetDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaCreateDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaCreateDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaDeleteDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaDeleteDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaCreateDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaCreateDashboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaSaveDashboardByUidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_freezonex_openiiot_api_grafana_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaSaveDashboardByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_freezonex_openiiot_api_grafana_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_freezonex_openiiot_api_grafana_proto_goTypes,
		DependencyIndexes: file_freezonex_openiiot_api_grafana_proto_depIdxs,
		MessageInfos:      file_freezonex_openiiot_api_grafana_proto_msgTypes,
	}.Build()
	File_freezonex_openiiot_api_grafana_proto = out.File
	file_freezonex_openiiot_api_grafana_proto_rawDesc = nil
	file_freezonex_openiiot_api_grafana_proto_goTypes = nil
	file_freezonex_openiiot_api_grafana_proto_depIdxs = nil
}
